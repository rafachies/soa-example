package org.chies.soa.main;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.chies.soa.jaxws.JAXWSService;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-04/11/2011 03:11 PM(mockbuild)-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "JAXWSService", targetNamespace = "org.chies.soa.jaxwsservice", wsdlLocation = "http://localhost:8080/soa-example/webservices/jaxwsservice?wsdl")
public class JAXWSServiceClient extends Service {

    private final static URL JAXWSSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/soa-example/webservices/jaxwsservice?wsdl");
        } catch (MalformedURLException e) {
        }
        JAXWSSERVICE_WSDL_LOCATION = url;
    }

    public JAXWSServiceClient(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public JAXWSServiceClient() {
        super(JAXWSSERVICE_WSDL_LOCATION, new QName("org.chies.soa.jaxwsservice", "JAXWSService"));
    }

    /**
     * 
     * @return
     *     returns JAXWSService
     */
    @WebEndpoint(name = "JAXWSServicePort")
    public JAXWSService getJAXWSServicePort() {
        return super.getPort(new QName("org.chies.soa.jaxwsservice", "JAXWSServicePort"), JAXWSService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns JAXWSService
     */
    @WebEndpoint(name = "JAXWSServicePort")
    public JAXWSService getJAXWSServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("org.chies.soa.jaxwsservice", "JAXWSServicePort"), JAXWSService.class, features);
    }

}